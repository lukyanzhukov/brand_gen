import { generateJsonContentWithImage } from './llm-server'
import { ColorPalette, FALLBACK_PALETTE } from './palette'

/**
 * –°–∫–∞—á–∏–≤–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –≤ base64
 */
async function downloadImageAsBase64(url: string): Promise<string | null> {
  try {
    console.log('üñºÔ∏è Downloading image:', url)
    const response = await fetch(url)
    if (!response.ok) {
      console.log('‚ùå Failed to download image:', response.status)
      return null
    }
    
    const arrayBuffer = await response.arrayBuffer()
    const base64 = Buffer.from(arrayBuffer).toString('base64')
    const mimeType = response.headers.get('content-type') || 'image/jpeg'
    
    console.log('‚úÖ Image downloaded and converted to base64')
    return `data:${mimeType};base64,${base64}`
  } catch (error) {
    console.error('‚ùå Error downloading image:', error)
    return null
  }
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ü–≤–µ—Ç–æ–≤—É—é –ø–∞–ª–∏—Ç—Ä—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –ª–æ–≥–æ—Ç–∏–ø–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–º–ø–∞–Ω–∏–∏
 */
export async function generatePalette(vacancyCorpus: string, logoUrl?: string, companyName?: string): Promise<ColorPalette> {
  console.log('üé® Generating palette for:', { companyName, logoUrl })

  const systemPrompt = `–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Ü–≤–µ—Ç–æ–≤–æ–º—É –¥–∏–∑–∞–π–Ω—É –∏ –±—Ä–µ–Ω–¥–∏–Ω–≥—É. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - —Å–æ–∑–¥–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â—É—é —Ü–≤–µ—Ç–æ–≤—É—é –ø–∞–ª–∏—Ç—Ä—É –¥–ª—è –±—Ä–µ–Ω–¥-—Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è.

## –ê–ù–ê–õ–ò–ó –õ–û–ì–û–¢–ò–ü–ê –ò –°–û–ó–î–ê–ù–ò–ï –ü–ê–õ–ò–¢–†–´
- **–ü–†–û–ê–ù–ê–õ–ò–ó–ò–†–£–ô –õ–û–ì–û–¢–ò–ü** - –∏–∑–≤–ª–µ–∫–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ü–≤–µ—Ç–∞ –∏–∑ –ª–æ–≥–æ—Ç–∏–ø–∞ –∫–æ–º–ø–∞–Ω–∏–∏
- **–ò—Å–ø–æ–ª—å–∑—É–π —Ü–≤–µ—Ç–∞ –ª–æ–≥–æ—Ç–∏–ø–∞** –∫–∞–∫ –æ—Å–Ω–æ–≤—É –¥–ª—è –ø–∞–ª–∏—Ç—Ä—ã
- **–°–æ–∑–¥–∞–≤–∞–π –≥–∞—Ä–º–æ–Ω–∏—á–Ω—ã–µ —Å–æ—á–µ—Ç–∞–Ω–∏—è** –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ü–≤–µ—Ç–æ–≤ –ª–æ–≥–æ—Ç–∏–ø–∞
- **–ê–¥–∞–ø—Ç–∏—Ä—É–π –ø–∞–ª–∏—Ç—Ä—É** –ø–æ–¥ —Ö–∞—Ä–∞–∫—Ç–µ—Ä –∏ —Å—Ñ–µ—Ä—É –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∫–æ–º–ø–∞–Ω–∏–∏

## –ü–†–ò–ù–¶–ò–ü–´ –î–ò–ó–ê–ô–ù–ê
- **–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ** —Ü–≤–µ—Ç–∞
- **–í—ã—Å–æ–∫–∏–π –∫–æ–Ω—Ç—Ä–∞—Å—Ç** –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
- **–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ** –¥–ª—è IT-–∫–æ–º–ø–∞–Ω–∏–∏
- **–ì–∞—Ä–º–æ–Ω–∏—á–Ω—ã–µ —Å–æ—á–µ—Ç–∞–Ω–∏—è** —Ü–≤–µ—Ç–æ–≤
- **–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å** –¥–ª—è –ª—é–¥–µ–π —Å –Ω–∞—Ä—É—à–µ–Ω–∏—è–º–∏ –∑—Ä–µ–Ω–∏—è

## –°–¢–†–£–ö–¢–£–†–ê –ü–ê–õ–ò–¢–†–´
- **primary**: –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–≤–µ—Ç (–∏–∑ –ª–æ–≥–æ—Ç–∏–ø–∞ –∏–ª–∏ –≥–∞—Ä–º–æ–Ω–∏—Ä—É—é—â–∏–π)
- **onPrimary**: –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω—ã–π –∫ primary
- **secondary**: –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ü–≤–µ—Ç
- **onSecondary**: –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω—ã–π –∫ secondary
- **background**: —Å–≤–µ—Ç–ª—ã–π —Ñ–æ–Ω
- **surface**: –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å
- **onBackground**: –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç
- **onSurface**: –≤—Ç–æ—Ä–∏—á–Ω—ã–π —Ç–µ–∫—Å—Ç
- **accent**: –∞–∫—Ü–µ–Ω—Ç–Ω—ã–π —Ü–≤–µ—Ç
- **onAccent**: –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω—ã–π –∫ accent
- **error**: —Ü–≤–µ—Ç –æ—à–∏–±–æ–∫
- **onError**: –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω—ã–π –∫ error
- **outline**: –≥—Ä–∞–Ω–∏—Ü—ã

## –ë–õ–û–ß–ù–´–ï –¶–í–ï–¢–ê
- **hero**: —è—Ä–∫–∏–π, –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π, —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞–º–∏
- **about**: –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π, –¥–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–π
- **tracks**: —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω—ã–π, —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π
- **geo**: –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π, –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π
- **facts**: –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω—ã–π, —á–∏—Ç–∞–µ–º—ã–π
- **benefits**: —Ç–µ–ø–ª—ã–π, –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π
- **culture**: –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–π, –∂–∏–≤–æ–π
- **media**: –¥–∏–Ω–∞–º–∏—á–Ω—ã–π, —è—Ä–∫–∏–π
- **hiring**: —á–µ—Ç–∫–∏–π, —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π
- **cta**: –ø—Ä–∏–∑—ã–≤–Ω—ã–π, —è—Ä–∫–∏–π

–í–µ—Ä–Ω–∏ –æ–±—ä–µ–∫—Ç —Å hex-—Ü–≤–µ—Ç–∞–º–∏. –í—Å–µ —Ü–≤–µ—Ç–∞ –¥–æ–ª–∂–Ω—ã –≥–∞—Ä–º–æ–Ω–∏—á–Ω–æ —Å–æ—á–µ—Ç–∞—Ç—å—Å—è –∏ –æ—Ç—Ä–∞–∂–∞—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä –∫–æ–º–ø–∞–Ω–∏–∏.`

  const userPrompt = `–°–û–ó–î–ê–ô –¶–í–ï–¢–û–í–£–Æ –ü–ê–õ–ò–¢–†–£ –î–õ–Ø –ö–û–ú–ü–ê–ù–ò–ò:

${companyName ? `–ö–æ–º–ø–∞–Ω–∏—è: ${companyName}` : ''}
${logoUrl ? `–õ–æ–≥–æ—Ç–∏–ø –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –Ω–∏–∂–µ` : ''}
${vacancyCorpus ? `–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏: ${vacancyCorpus}` : ''}

–ó–ê–î–ê–ß–ê:
1. **–ü–†–û–ê–ù–ê–õ–ò–ó–ò–†–£–ô –õ–û–ì–û–¢–ò–ü** –∏ –∏–∑–≤–ª–µ–∫–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ü–≤–µ—Ç–∞
2. **–ò—Å–ø–æ–ª—å–∑—É–π —Ü–≤–µ—Ç–∞ –ª–æ–≥–æ—Ç–∏–ø–∞** –∫–∞–∫ –æ—Å–Ω–æ–≤—É –¥–ª—è –ø–∞–ª–∏—Ç—Ä—ã
3. **–°–æ–∑–¥–∞–π –≥–∞—Ä–º–æ–Ω–∏—á–Ω—É—é –ø–∞–ª–∏—Ç—Ä—É** –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ü–≤–µ—Ç–æ–≤ –ª–æ–≥–æ—Ç–∏–ø–∞
4. **–ê–¥–∞–ø—Ç–∏—Ä—É–π –ø–æ–¥ —Ö–∞—Ä–∞–∫—Ç–µ—Ä –∫–æ–º–ø–∞–Ω–∏–∏** –∏ —Å—Ñ–µ—Ä—É –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

–í–µ—Ä–Ω–∏ –¢–û–õ–¨–ö–û JSON —Å —Ü–≤–µ—Ç–æ–≤–æ–π –ø–∞–ª–∏—Ç—Ä–æ–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
{
  "primary": "#—Ü–≤–µ—Ç",
  "onPrimary": "#ffffff",
  "secondary": "#64748b",
  "onSecondary": "#ffffff",
  "background": "#ffffff",
  "surface": "#f8fafc",
  "onBackground": "#0f172a",
  "onSurface": "#334155",
  "accent": "#—Ü–≤–µ—Ç",
  "onAccent": "#ffffff",
  "error": "#dc2626",
  "onError": "#ffffff",
  "outline": "#e2e8f0",
  "hero": {
    "background": "#f8fafc",
    "text": "#0f172a",
    "accent": "#—Ü–≤–µ—Ç"
  },
  "about": {
    "background": "#ffffff",
    "text": "#0f172a",
    "accent": "#—Ü–≤–µ—Ç"
  },
  "tracks": {
    "background": "#ffffff",
    "text": "#0f172a",
    "accent": "#—Ü–≤–µ—Ç"
  },
  "geo": {
    "background": "#ffffff",
    "text": "#0f172a",
    "accent": "#—Ü–≤–µ—Ç"
  },
  "facts": {
    "background": "#f8fafc",
    "text": "#0f172a",
    "accent": "#—Ü–≤–µ—Ç"
  },
  "benefits": {
    "background": "#f8fafc",
    "text": "#0f172a",
    "accent": "#—Ü–≤–µ—Ç"
  },
  "culture": {
    "background": "#ffffff",
    "text": "#0f172a",
    "accent": "#—Ü–≤–µ—Ç"
  },
  "media": {
    "background": "#ffffff",
    "text": "#0f172a",
    "accent": "#—Ü–≤–µ—Ç"
  },
  "hiring": {
    "background": "#ffffff",
    "text": "#0f172a",
    "accent": "#—Ü–≤–µ—Ç"
  },
  "cta": {
    "background": "#—Ü–≤–µ—Ç",
    "text": "#ffffff",
    "accent": "#ffffff"
  }
}`

  try {
    console.log('üé® Calling LLM for palette generation...')
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –ª–æ–≥–æ—Ç–∏–ø, —Å–∫–∞—á–∏–≤–∞–µ–º –µ–≥–æ –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º
    let imageBase64: string | null = null
    if (logoUrl) {
      imageBase64 = await downloadImageAsBase64(logoUrl)
    }
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º vision –º–æ–¥–µ–ª—å –µ—Å–ª–∏ –µ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const model = imageBase64 ? 'gpt-4o' : 'gpt-4o-mini'
    console.log('üé® Using model:', model)

    const palette = await generateJsonContentWithImage(systemPrompt, userPrompt, FALLBACK_PALETTE, model, imageBase64)
    console.log('üé® LLM returned palette:', JSON.stringify(palette, null, 2))

    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ü–≤–µ—Ç–æ–≤
    if (isValidPalette(palette)) {
      console.log('‚úÖ Palette validation passed')
      return palette
    } else {
      console.log('‚ùå Palette validation failed, trying again with simpler prompt')
      // –ü–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑ —Å –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç—ã–º –ø—Ä–æ–º–ø—Ç–æ–º
      const simplePrompt = `–°–æ–∑–¥–∞–π —Ü–≤–µ—Ç–æ–≤—É—é –ø–∞–ª–∏—Ç—Ä—É –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–∏ "${companyName}". 
–ò—Å–ø–æ–ª—å–∑—É–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏—é —Ü–≤–µ—Ç–æ–≤ –∏ —Å–æ–∑–¥–∞–π –≥–∞—Ä–º–æ–Ω–∏—á–Ω—É—é –ø–∞–ª–∏—Ç—Ä—É.
–í–µ—Ä–Ω–∏ JSON: {"primary": "#—Ü–≤–µ—Ç", "accent": "#—Ü–≤–µ—Ç", "background": "#ffffff", "surface": "#f8fafc", "onBackground": "#0f172a", "onSurface": "#334155"}`
      
      const retryPalette = await generateJsonContentWithImage(simplePrompt, '', FALLBACK_PALETTE, 'gpt-4o-mini')
      if (isValidPalette(retryPalette)) {
        console.log('‚úÖ Retry palette validation passed')
        return retryPalette
      }
    }
  } catch (error) {
    console.error('‚ùå Error generating palette:', error)
  }

  // –ï—Å–ª–∏ –≤—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ —É–¥–∞–ª–∏—Å—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback
  console.log('üé® All attempts failed, using fallback palette')
  return FALLBACK_PALETTE
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –ø–∞–ª–∏—Ç—Ä—ã
 */
function isValidPalette(palette: any): palette is ColorPalette {
  if (!palette || typeof palette !== 'object') {
    return false
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è
  const requiredFields = ['primary', 'accent']
  
  return requiredFields.every(field => 
    palette[field] && 
    typeof palette[field] === 'string' && 
    palette[field].startsWith('#') &&
    palette[field].length === 7 // #RRGGBB
  )
}